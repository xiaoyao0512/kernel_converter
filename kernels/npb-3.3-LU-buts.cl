__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h, int i, int j) {
  int k, l, m, n;
  double o[5][5], p[5][5], q[5][5], r[5][5];
  double s, t, u;
  double v, w, x, y;
  double z[5][5], aa[5];
  __global double(*ab)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(1) + 1 + i;
  l = get_global_id(0) + 1 + j;
  m = h - get_global_id(1) - get_global_id(0) - i - j + 1;
  if (k >= e - 1 || l >= (f - 1) || m < 1 || m >= (g - 1))
    return;

  ab = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;

  s = (4.0 / 3.0);
  t = 1.40e+00 * 1.00e-01 * 1.00e+00 * 1.40e+00;
  u = 1.00e-01 * 1.00e+00;

  w = ae[k][l][m];
  x = w * w;
  y = w * x;

  r[0][0] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[1][0] = 0.0;
  r[2][0] = 0.0;
  r[3][0] = 0.0;
  r[4][0] = 0.0;

  r[0][1] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][1]);
  r[1][1] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[2][1] = 0.0;
  r[3][1] = 0.0;
  r[4][1] = 0.0;

  r[0][2] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][2]);
  r[1][2] = 0.0;
  r[2][2] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[3][2] = 0.0;
  r[4][2] = 0.0;

  r[0][3] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) * (u * x * ac[k][l][m][3]);
  r[1][3] = 0.0;
  r[2][3] = 0.0;
  r[3][3] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[4][3] = 0.0;

  r[0][4] = -0.5 * 2.0 * ((((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][1] * ac[k][l][m][1]) + ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][2] * ac[k][l][m][2]) +
                           ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * (ac[k][l][m][3] * ac[k][l][m][3])) *
                              y +
                          ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * x * ac[k][l][m][4]);

  r[1][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][1];
  r[2][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][2];
  r[3][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * x * ac[k][l][m][3];
  r[4][4] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * w + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);

  w = ae[k][l][m + 1];
  x = w * w;
  y = w * x;

  o[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[1][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  o[2][0] = 0.0;
  o[3][0] = 0.0;
  o[4][0] = 0.0;

  o[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * w) * (ac[k][l][m + 1][1] * w) + 0.40e+00 * ad[k][l][m + 1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l][m + 1][1]);
  o[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * w));
  o[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * w));
  o[4][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  o[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][2]);
  o[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][2] * w);
  o[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[3][2] = 0.0;
  o[4][2] = 0.0;

  o[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][3]);
  o[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][3] * w);
  o[2][3] = 0.0;
  o[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[4][3] = 0.0;

  o[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l][m + 1] - 1.40e+00 * ac[k][l][m + 1][4]) * (ac[k][l][m + 1][1] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(s * u - t) * y * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1]) - (u - t) * y * (ac[k][l][m + 1][2] * ac[k][l][m + 1][2]) - (u - t) * y * (ac[k][l][m + 1][3] * ac[k][l][m + 1][3]) - t * x * ac[k][l][m + 1][4]);
  o[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][4] * w) - 0.40e+00 * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1] * x + ad[k][l][m + 1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l][m + 1][1];
  o[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][2];
  o[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][3];
  o[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k][l + 1][m];
  x = w * w;
  y = w * x;

  p[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[1][0] = 0.0;
  p[2][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  p[3][0] = 0.0;
  p[4][0] = 0.0;

  p[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][1]);
  p[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][1] * w);
  p[3][1] = 0.0;
  p[4][1] = 0.0;

  p[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * w) * (ac[k][l + 1][m][2] * w) + 0.40e+00 * (ad[k][l + 1][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l + 1][m][2]);
  p[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * w));
  p[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][3] * w));
  p[4][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  p[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][3]);
  p[1][3] = 0.0;
  p[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][3] * w);
  p[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[4][3] = 0.0;

  p[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l + 1][m] - 1.40e+00 * ac[k][l + 1][m][4]) * (ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k][l + 1][m][1] * ac[k][l + 1][m][1]) - (s * u - t) * y * (ac[k][l + 1][m][2] * ac[k][l + 1][m][2]) - (u - t) * y * (ac[k][l + 1][m][3] * ac[k][l + 1][m][3]) - t * x * ac[k][l + 1][m][4]);
  p[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][1];
  p[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][4] * w) - 0.40e+00 * (ad[k][l + 1][m] * w + ac[k][l + 1][m][2] * ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l + 1][m][2];
  p[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][3];
  p[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k + 1][l][m];
  x = w * w;
  y = w * x;

  q[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[1][0] = 0.0;
  q[2][0] = 0.0;
  q[3][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  q[4][0] = 0.0;

  q[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][1]);
  q[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * u * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[2][1] = 0.0;
  q[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][1] * w);
  q[4][1] = 0.0;

  q[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][2]);
  q[1][2] = 0.0;
  q[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][2] * w);
  q[4][2] = 0.0;

  q[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][3] * w) * (ac[k + 1][l][m][3] * w) + 0.40e+00 * (ad[k + 1][l][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k + 1][l][m][3]);
  q[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * w));
  q[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * w));
  q[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (2.0 - 0.40e+00) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[4][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  q[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k + 1][l][m] - 1.40e+00 * ac[k + 1][l][m][4]) * (ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k + 1][l][m][1] * ac[k + 1][l][m][1]) - (u - t) * y * (ac[k + 1][l][m][2] * ac[k + 1][l][m][2]) - (s * u - t) * y * (ac[k + 1][l][m][3] * ac[k + 1][l][m][3]) - t * x * ac[k + 1][l][m][4]);
  q[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][1];
  q[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][2];
  q[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][4] * w) - 0.40e+00 * (ad[k + 1][l][m] * w + ac[k + 1][l][m][3] * ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k + 1][l][m][3];
  q[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][3] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;

  for (n = 0; n < 5; n++) {
    aa[n] = 1.2 * (q[0][n] * ab[k + 1][l][m][0] + q[1][n] * ab[k + 1][l][m][1] + q[2][n] * ab[k + 1][l][m][2] + q[3][n] * ab[k + 1][l][m][3] + q[4][n] * ab[k + 1][l][m][4]);
  }
  for (n = 0; n < 5; n++) {
    aa[n] = aa[n] + 1.2 * (p[0][n] * ab[k][l + 1][m][0] + o[0][n] * ab[k][l][m + 1][0] + p[1][n] * ab[k][l + 1][m][1] + o[1][n] * ab[k][l][m + 1][1] + p[2][n] * ab[k][l + 1][m][2] + o[2][n] * ab[k][l][m + 1][2] + p[3][n] * ab[k][l + 1][m][3] + o[3][n] * ab[k][l][m + 1][3] + p[4][n] * ab[k][l + 1][m][4] + o[4][n] * ab[k][l][m + 1][4]);
  }

  for (n = 0; n < 5; n++) {
    z[n][0] = r[0][n];
    z[n][1] = r[1][n];
    z[n][2] = r[2][n];
    z[n][3] = r[3][n];
    z[n][4] = r[4][n];
  }

  w = 1.0 / z[0][0];
  v = w * z[1][0];
  z[1][1] = z[1][1] - v * z[0][1];
  z[1][2] = z[1][2] - v * z[0][2];
  z[1][3] = z[1][3] - v * z[0][3];
  z[1][4] = z[1][4] - v * z[0][4];
  aa[1] = aa[1] - aa[0] * v;

  v = w * z[2][0];
  z[2][1] = z[2][1] - v * z[0][1];
  z[2][2] = z[2][2] - v * z[0][2];
  z[2][3] = z[2][3] - v * z[0][3];
  z[2][4] = z[2][4] - v * z[0][4];
  aa[2] = aa[2] - aa[0] * v;

  v = w * z[3][0];
  z[3][1] = z[3][1] - v * z[0][1];
  z[3][2] = z[3][2] - v * z[0][2];
  z[3][3] = z[3][3] - v * z[0][3];
  z[3][4] = z[3][4] - v * z[0][4];
  aa[3] = aa[3] - aa[0] * v;

  v = w * z[4][0];
  z[4][1] = z[4][1] - v * z[0][1];
  z[4][2] = z[4][2] - v * z[0][2];
  z[4][3] = z[4][3] - v * z[0][3];
  z[4][4] = z[4][4] - v * z[0][4];
  aa[4] = aa[4] - aa[0] * v;

  w = 1.0 / z[1][1];
  v = w * z[2][1];
  z[2][2] = z[2][2] - v * z[1][2];
  z[2][3] = z[2][3] - v * z[1][3];
  z[2][4] = z[2][4] - v * z[1][4];
  aa[2] = aa[2] - aa[1] * v;

  v = w * z[3][1];
  z[3][2] = z[3][2] - v * z[1][2];
  z[3][3] = z[3][3] - v * z[1][3];
  z[3][4] = z[3][4] - v * z[1][4];
  aa[3] = aa[3] - aa[1] * v;

  v = w * z[4][1];
  z[4][2] = z[4][2] - v * z[1][2];
  z[4][3] = z[4][3] - v * z[1][3];
  z[4][4] = z[4][4] - v * z[1][4];
  aa[4] = aa[4] - aa[1] * v;

  w = 1.0 / z[2][2];
  v = w * z[3][2];
  z[3][3] = z[3][3] - v * z[2][3];
  z[3][4] = z[3][4] - v * z[2][4];
  aa[3] = aa[3] - aa[2] * v;

  v = w * z[4][2];
  z[4][3] = z[4][3] - v * z[2][3];
  z[4][4] = z[4][4] - v * z[2][4];
  aa[4] = aa[4] - aa[2] * v;

  w = 1.0 / z[3][3];
  v = w * z[4][3];
  z[4][4] = z[4][4] - v * z[3][4];
  aa[4] = aa[4] - aa[3] * v;

  aa[4] = aa[4] / z[4][4];

  aa[3] = aa[3] - z[3][4] * aa[4];
  aa[3] = aa[3] / z[3][3];

  aa[2] = aa[2] - z[2][3] * aa[3] - z[2][4] * aa[4];
  aa[2] = aa[2] / z[2][2];

  aa[1] = aa[1] - z[1][2] * aa[2] - z[1][3] * aa[3] - z[1][4] * aa[4];
  aa[1] = aa[1] / z[1][1];

  aa[0] = aa[0] - z[0][1] * aa[1] - z[0][2] * aa[2] - z[0][3] * aa[3] - z[0][4] * aa[4];
  aa[0] = aa[0] / z[0][0];

  ab[k][l][m][0] = ab[k][l][m][0] - aa[0];
  ab[k][l][m][1] = ab[k][l][m][1] - aa[1];
  ab[k][l][m][2] = ab[k][l][m][2] - aa[2];
  ab[k][l][m][3] = ab[k][l][m][3] - aa[3];
  ab[k][l][m][4] = ab[k][l][m][4] - aa[4];
}
