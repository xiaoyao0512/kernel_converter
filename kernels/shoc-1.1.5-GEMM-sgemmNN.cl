__kernel void A(__global const float* a, int b, __global const float* c, int d, __global float* e, int f, int g, float h, float i) {
  const int j = get_local_id(0);
  const int k = get_local_id(1);
  const int l = get_group_id(0) * 64;
  const int m = get_group_id(1) * 16;
  const int n = j + k * 16;

  int o, p, q, r = 0;

  a += l + n;

  c += j + (m + k) * d;

  e += l + n + (m * f);

  float s[16];
  for (o = 0; o < 16; ++o) {
    s[o] = 0.0;
  }

  __local float t[16][17];

  do {
    __private float u[4];
    for (q = 0; q < 4; ++q) {
      u[q] = a[q * b];
    }

    t[j][k] = c[0 * d];
    t[j][k + 4] = c[4 * d];
    t[j][k + 8] = c[8 * d];
    t[j][k + 12] = c[12 * d];
    barrier(1);

    a += 4 * b;

    do {
      s[0] += u[0] * t[0][0];
      s[1] += u[0] * t[0][1];
      s[2] += u[0] * t[0][2];
      s[3] += u[0] * t[0][3];
      s[4] += u[0] * t[0][4];
      s[5] += u[0] * t[0][5];
      s[6] += u[0] * t[0][6];
      s[7] += u[0] * t[0][7];
      s[8] += u[0] * t[0][8];
      s[9] += u[0] * t[0][9];
      s[10] += u[0] * t[0][10];
      s[11] += u[0] * t[0][11];
      s[12] += u[0] * t[0][12];
      s[13] += u[0] * t[0][13];
      s[14] += u[0] * t[0][14];
      s[15] += u[0] * t[0][15];
    } while (0);
    u[0] = a[0 * b];
    do {
      s[0] += u[1] * t[1][0];
      s[1] += u[1] * t[1][1];
      s[2] += u[1] * t[1][2];
      s[3] += u[1] * t[1][3];
      s[4] += u[1] * t[1][4];
      s[5] += u[1] * t[1][5];
      s[6] += u[1] * t[1][6];
      s[7] += u[1] * t[1][7];
      s[8] += u[1] * t[1][8];
      s[9] += u[1] * t[1][9];
      s[10] += u[1] * t[1][10];
      s[11] += u[1] * t[1][11];
      s[12] += u[1] * t[1][12];
      s[13] += u[1] * t[1][13];
      s[14] += u[1] * t[1][14];
      s[15] += u[1] * t[1][15];
    } while (0);
    u[1] = a[1 * b];
    do {
      s[0] += u[2] * t[2][0];
      s[1] += u[2] * t[2][1];
      s[2] += u[2] * t[2][2];
      s[3] += u[2] * t[2][3];
      s[4] += u[2] * t[2][4];
      s[5] += u[2] * t[2][5];
      s[6] += u[2] * t[2][6];
      s[7] += u[2] * t[2][7];
      s[8] += u[2] * t[2][8];
      s[9] += u[2] * t[2][9];
      s[10] += u[2] * t[2][10];
      s[11] += u[2] * t[2][11];
      s[12] += u[2] * t[2][12];
      s[13] += u[2] * t[2][13];
      s[14] += u[2] * t[2][14];
      s[15] += u[2] * t[2][15];
    } while (0);
    u[2] = a[2 * b];
    do {
      s[0] += u[3] * t[3][0];
      s[1] += u[3] * t[3][1];
      s[2] += u[3] * t[3][2];
      s[3] += u[3] * t[3][3];
      s[4] += u[3] * t[3][4];
      s[5] += u[3] * t[3][5];
      s[6] += u[3] * t[3][6];
      s[7] += u[3] * t[3][7];
      s[8] += u[3] * t[3][8];
      s[9] += u[3] * t[3][9];
      s[10] += u[3] * t[3][10];
      s[11] += u[3] * t[3][11];
      s[12] += u[3] * t[3][12];
      s[13] += u[3] * t[3][13];
      s[14] += u[3] * t[3][14];
      s[15] += u[3] * t[3][15];
    } while (0);
    u[3] = a[3 * b];

    a += 4 * b;
    do {
      s[0] += u[0] * t[4][0];
      s[1] += u[0] * t[4][1];
      s[2] += u[0] * t[4][2];
      s[3] += u[0] * t[4][3];
      s[4] += u[0] * t[4][4];
      s[5] += u[0] * t[4][5];
      s[6] += u[0] * t[4][6];
      s[7] += u[0] * t[4][7];
      s[8] += u[0] * t[4][8];
      s[9] += u[0] * t[4][9];
      s[10] += u[0] * t[4][10];
      s[11] += u[0] * t[4][11];
      s[12] += u[0] * t[4][12];
      s[13] += u[0] * t[4][13];
      s[14] += u[0] * t[4][14];
      s[15] += u[0] * t[4][15];
    } while (0);
    u[0] = a[0 * b];
    do {
      s[0] += u[1] * t[5][0];
      s[1] += u[1] * t[5][1];
      s[2] += u[1] * t[5][2];
      s[3] += u[1] * t[5][3];
      s[4] += u[1] * t[5][4];
      s[5] += u[1] * t[5][5];
      s[6] += u[1] * t[5][6];
      s[7] += u[1] * t[5][7];
      s[8] += u[1] * t[5][8];
      s[9] += u[1] * t[5][9];
      s[10] += u[1] * t[5][10];
      s[11] += u[1] * t[5][11];
      s[12] += u[1] * t[5][12];
      s[13] += u[1] * t[5][13];
      s[14] += u[1] * t[5][14];
      s[15] += u[1] * t[5][15];
    } while (0);
    u[1] = a[1 * b];
    do {
      s[0] += u[2] * t[6][0];
      s[1] += u[2] * t[6][1];
      s[2] += u[2] * t[6][2];
      s[3] += u[2] * t[6][3];
      s[4] += u[2] * t[6][4];
      s[5] += u[2] * t[6][5];
      s[6] += u[2] * t[6][6];
      s[7] += u[2] * t[6][7];
      s[8] += u[2] * t[6][8];
      s[9] += u[2] * t[6][9];
      s[10] += u[2] * t[6][10];
      s[11] += u[2] * t[6][11];
      s[12] += u[2] * t[6][12];
      s[13] += u[2] * t[6][13];
      s[14] += u[2] * t[6][14];
      s[15] += u[2] * t[6][15];
    } while (0);
    u[2] = a[2 * b];
    do {
      s[0] += u[3] * t[7][0];
      s[1] += u[3] * t[7][1];
      s[2] += u[3] * t[7][2];
      s[3] += u[3] * t[7][3];
      s[4] += u[3] * t[7][4];
      s[5] += u[3] * t[7][5];
      s[6] += u[3] * t[7][6];
      s[7] += u[3] * t[7][7];
      s[8] += u[3] * t[7][8];
      s[9] += u[3] * t[7][9];
      s[10] += u[3] * t[7][10];
      s[11] += u[3] * t[7][11];
      s[12] += u[3] * t[7][12];
      s[13] += u[3] * t[7][13];
      s[14] += u[3] * t[7][14];
      s[15] += u[3] * t[7][15];
    } while (0);
    u[3] = a[3 * b];

    a += 4 * b;
    do {
      s[0] += u[0] * t[8][0];
      s[1] += u[0] * t[8][1];
      s[2] += u[0] * t[8][2];
      s[3] += u[0] * t[8][3];
      s[4] += u[0] * t[8][4];
      s[5] += u[0] * t[8][5];
      s[6] += u[0] * t[8][6];
      s[7] += u[0] * t[8][7];
      s[8] += u[0] * t[8][8];
      s[9] += u[0] * t[8][9];
      s[10] += u[0] * t[8][10];
      s[11] += u[0] * t[8][11];
      s[12] += u[0] * t[8][12];
      s[13] += u[0] * t[8][13];
      s[14] += u[0] * t[8][14];
      s[15] += u[0] * t[8][15];
    } while (0);
    u[0] = a[0 * b];
    do {
      s[0] += u[1] * t[9][0];
      s[1] += u[1] * t[9][1];
      s[2] += u[1] * t[9][2];
      s[3] += u[1] * t[9][3];
      s[4] += u[1] * t[9][4];
      s[5] += u[1] * t[9][5];
      s[6] += u[1] * t[9][6];
      s[7] += u[1] * t[9][7];
      s[8] += u[1] * t[9][8];
      s[9] += u[1] * t[9][9];
      s[10] += u[1] * t[9][10];
      s[11] += u[1] * t[9][11];
      s[12] += u[1] * t[9][12];
      s[13] += u[1] * t[9][13];
      s[14] += u[1] * t[9][14];
      s[15] += u[1] * t[9][15];
    } while (0);
    u[1] = a[1 * b];
    do {
      s[0] += u[2] * t[10][0];
      s[1] += u[2] * t[10][1];
      s[2] += u[2] * t[10][2];
      s[3] += u[2] * t[10][3];
      s[4] += u[2] * t[10][4];
      s[5] += u[2] * t[10][5];
      s[6] += u[2] * t[10][6];
      s[7] += u[2] * t[10][7];
      s[8] += u[2] * t[10][8];
      s[9] += u[2] * t[10][9];
      s[10] += u[2] * t[10][10];
      s[11] += u[2] * t[10][11];
      s[12] += u[2] * t[10][12];
      s[13] += u[2] * t[10][13];
      s[14] += u[2] * t[10][14];
      s[15] += u[2] * t[10][15];
    } while (0);
    u[2] = a[2 * b];
    do {
      s[0] += u[3] * t[11][0];
      s[1] += u[3] * t[11][1];
      s[2] += u[3] * t[11][2];
      s[3] += u[3] * t[11][3];
      s[4] += u[3] * t[11][4];
      s[5] += u[3] * t[11][5];
      s[6] += u[3] * t[11][6];
      s[7] += u[3] * t[11][7];
      s[8] += u[3] * t[11][8];
      s[9] += u[3] * t[11][9];
      s[10] += u[3] * t[11][10];
      s[11] += u[3] * t[11][11];
      s[12] += u[3] * t[11][12];
      s[13] += u[3] * t[11][13];
      s[14] += u[3] * t[11][14];
      s[15] += u[3] * t[11][15];
    } while (0);
    u[3] = a[3 * b];

    a += 4 * b;
    do {
      s[0] += u[0] * t[12][0];
      s[1] += u[0] * t[12][1];
      s[2] += u[0] * t[12][2];
      s[3] += u[0] * t[12][3];
      s[4] += u[0] * t[12][4];
      s[5] += u[0] * t[12][5];
      s[6] += u[0] * t[12][6];
      s[7] += u[0] * t[12][7];
      s[8] += u[0] * t[12][8];
      s[9] += u[0] * t[12][9];
      s[10] += u[0] * t[12][10];
      s[11] += u[0] * t[12][11];
      s[12] += u[0] * t[12][12];
      s[13] += u[0] * t[12][13];
      s[14] += u[0] * t[12][14];
      s[15] += u[0] * t[12][15];
    } while (0);
    do {
      s[0] += u[1] * t[13][0];
      s[1] += u[1] * t[13][1];
      s[2] += u[1] * t[13][2];
      s[3] += u[1] * t[13][3];
      s[4] += u[1] * t[13][4];
      s[5] += u[1] * t[13][5];
      s[6] += u[1] * t[13][6];
      s[7] += u[1] * t[13][7];
      s[8] += u[1] * t[13][8];
      s[9] += u[1] * t[13][9];
      s[10] += u[1] * t[13][10];
      s[11] += u[1] * t[13][11];
      s[12] += u[1] * t[13][12];
      s[13] += u[1] * t[13][13];
      s[14] += u[1] * t[13][14];
      s[15] += u[1] * t[13][15];
    } while (0);
    do {
      s[0] += u[2] * t[14][0];
      s[1] += u[2] * t[14][1];
      s[2] += u[2] * t[14][2];
      s[3] += u[2] * t[14][3];
      s[4] += u[2] * t[14][4];
      s[5] += u[2] * t[14][5];
      s[6] += u[2] * t[14][6];
      s[7] += u[2] * t[14][7];
      s[8] += u[2] * t[14][8];
      s[9] += u[2] * t[14][9];
      s[10] += u[2] * t[14][10];
      s[11] += u[2] * t[14][11];
      s[12] += u[2] * t[14][12];
      s[13] += u[2] * t[14][13];
      s[14] += u[2] * t[14][14];
      s[15] += u[2] * t[14][15];
    } while (0);
    do {
      s[0] += u[3] * t[15][0];
      s[1] += u[3] * t[15][1];
      s[2] += u[3] * t[15][2];
      s[3] += u[3] * t[15][3];
      s[4] += u[3] * t[15][4];
      s[5] += u[3] * t[15][5];
      s[6] += u[3] * t[15][6];
      s[7] += u[3] * t[15][7];
      s[8] += u[3] * t[15][8];
      s[9] += u[3] * t[15][9];
      s[10] += u[3] * t[15][10];
      s[11] += u[3] * t[15][11];
      s[12] += u[3] * t[15][12];
      s[13] += u[3] * t[15][13];
      s[14] += u[3] * t[15][14];
      s[15] += u[3] * t[15][15];
    } while (0);

    c += 16;
    r += 16;
    barrier(1);
  } while (r < g);

  for (int o = 0; o < 16; o++, e += f) {
    e[0] = h * s[o] + i * e[0];
  }
}
