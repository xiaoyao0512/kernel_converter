__kernel void A(__global const float* a, int b, __global const float* c, int d, __global float* e, int f, int g, float h, float i) {
  const int j = get_local_id(0);
  const int k = get_local_id(1);
  const int l = get_group_id(0) * 64;
  const int m = get_group_id(1) * 16;
  const int n = j + k * 16;

  int o, p = 0;

  a += l + n;
  c += m + j + (k * d);
  e += l + n + (m * f);

  float q[4];
  for (o = 0; o < 4; ++o) {
    q[o] = a[o * b];
  }
  __private float r;
  r = c[0];

  a += 4 * b;
  c += 4 * d;
  p += 4 * d;

  __local float s[4][16];
  float t[16];
  for (o = 0; o < 16; ++o) {
    t[o] = 0.0;
  }

  do {
    __private float u[4];
    for (o = 0; o < 4; ++o) {
      u[o] = q[o];
    }

    s[k][j] = r;
    barrier(1);

    q[0] = a[0 * b];
    q[1] = a[1 * b];
    q[2] = a[2 * b];
    q[3] = a[3 * b];
    r = c[0];

    do {
      t[0] += u[0] * s[0][0];
      t[1] += u[0] * s[0][1];
      t[2] += u[0] * s[0][2];
      t[3] += u[0] * s[0][3];
      t[4] += u[0] * s[0][4];
      t[5] += u[0] * s[0][5];
      t[6] += u[0] * s[0][6];
      t[7] += u[0] * s[0][7];
      t[8] += u[0] * s[0][8];
      t[9] += u[0] * s[0][9];
      t[10] += u[0] * s[0][10];
      t[11] += u[0] * s[0][11];
      t[12] += u[0] * s[0][12];
      t[13] += u[0] * s[0][13];
      t[14] += u[0] * s[0][14];
      t[15] += u[0] * s[0][15];
    } while (0);
    do {
      t[0] += u[1] * s[1][0];
      t[1] += u[1] * s[1][1];
      t[2] += u[1] * s[1][2];
      t[3] += u[1] * s[1][3];
      t[4] += u[1] * s[1][4];
      t[5] += u[1] * s[1][5];
      t[6] += u[1] * s[1][6];
      t[7] += u[1] * s[1][7];
      t[8] += u[1] * s[1][8];
      t[9] += u[1] * s[1][9];
      t[10] += u[1] * s[1][10];
      t[11] += u[1] * s[1][11];
      t[12] += u[1] * s[1][12];
      t[13] += u[1] * s[1][13];
      t[14] += u[1] * s[1][14];
      t[15] += u[1] * s[1][15];
    } while (0);
    do {
      t[0] += u[2] * s[2][0];
      t[1] += u[2] * s[2][1];
      t[2] += u[2] * s[2][2];
      t[3] += u[2] * s[2][3];
      t[4] += u[2] * s[2][4];
      t[5] += u[2] * s[2][5];
      t[6] += u[2] * s[2][6];
      t[7] += u[2] * s[2][7];
      t[8] += u[2] * s[2][8];
      t[9] += u[2] * s[2][9];
      t[10] += u[2] * s[2][10];
      t[11] += u[2] * s[2][11];
      t[12] += u[2] * s[2][12];
      t[13] += u[2] * s[2][13];
      t[14] += u[2] * s[2][14];
      t[15] += u[2] * s[2][15];
    } while (0);
    do {
      t[0] += u[3] * s[3][0];
      t[1] += u[3] * s[3][1];
      t[2] += u[3] * s[3][2];
      t[3] += u[3] * s[3][3];
      t[4] += u[3] * s[3][4];
      t[5] += u[3] * s[3][5];
      t[6] += u[3] * s[3][6];
      t[7] += u[3] * s[3][7];
      t[8] += u[3] * s[3][8];
      t[9] += u[3] * s[3][9];
      t[10] += u[3] * s[3][10];
      t[11] += u[3] * s[3][11];
      t[12] += u[3] * s[3][12];
      t[13] += u[3] * s[3][13];
      t[14] += u[3] * s[3][14];
      t[15] += u[3] * s[3][15];
    } while (0);

    a += 4 * b;
    c += 4 * d;
    p += 4 * d;
    barrier(1);

  } while (p < g * d);

  s[k][j] = r;
  barrier(1);

  do {
    t[0] += q[0] * s[0][0];
    t[1] += q[0] * s[0][1];
    t[2] += q[0] * s[0][2];
    t[3] += q[0] * s[0][3];
    t[4] += q[0] * s[0][4];
    t[5] += q[0] * s[0][5];
    t[6] += q[0] * s[0][6];
    t[7] += q[0] * s[0][7];
    t[8] += q[0] * s[0][8];
    t[9] += q[0] * s[0][9];
    t[10] += q[0] * s[0][10];
    t[11] += q[0] * s[0][11];
    t[12] += q[0] * s[0][12];
    t[13] += q[0] * s[0][13];
    t[14] += q[0] * s[0][14];
    t[15] += q[0] * s[0][15];
  } while (0);
  do {
    t[0] += q[1] * s[1][0];
    t[1] += q[1] * s[1][1];
    t[2] += q[1] * s[1][2];
    t[3] += q[1] * s[1][3];
    t[4] += q[1] * s[1][4];
    t[5] += q[1] * s[1][5];
    t[6] += q[1] * s[1][6];
    t[7] += q[1] * s[1][7];
    t[8] += q[1] * s[1][8];
    t[9] += q[1] * s[1][9];
    t[10] += q[1] * s[1][10];
    t[11] += q[1] * s[1][11];
    t[12] += q[1] * s[1][12];
    t[13] += q[1] * s[1][13];
    t[14] += q[1] * s[1][14];
    t[15] += q[1] * s[1][15];
  } while (0);
  do {
    t[0] += q[2] * s[2][0];
    t[1] += q[2] * s[2][1];
    t[2] += q[2] * s[2][2];
    t[3] += q[2] * s[2][3];
    t[4] += q[2] * s[2][4];
    t[5] += q[2] * s[2][5];
    t[6] += q[2] * s[2][6];
    t[7] += q[2] * s[2][7];
    t[8] += q[2] * s[2][8];
    t[9] += q[2] * s[2][9];
    t[10] += q[2] * s[2][10];
    t[11] += q[2] * s[2][11];
    t[12] += q[2] * s[2][12];
    t[13] += q[2] * s[2][13];
    t[14] += q[2] * s[2][14];
    t[15] += q[2] * s[2][15];
  } while (0);
  do {
    t[0] += q[3] * s[3][0];
    t[1] += q[3] * s[3][1];
    t[2] += q[3] * s[3][2];
    t[3] += q[3] * s[3][3];
    t[4] += q[3] * s[3][4];
    t[5] += q[3] * s[3][5];
    t[6] += q[3] * s[3][6];
    t[7] += q[3] * s[3][7];
    t[8] += q[3] * s[3][8];
    t[9] += q[3] * s[3][9];
    t[10] += q[3] * s[3][10];
    t[11] += q[3] * s[3][11];
    t[12] += q[3] * s[3][12];
    t[13] += q[3] * s[3][13];
    t[14] += q[3] * s[3][14];
    t[15] += q[3] * s[3][15];
  } while (0);

  for (int o = 0; o < 16; o++, e += f) {
    e[0] = h * t[o] + i * e[0];
  }
}
