__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, int g, int h, int i) {
  int j, k, l;
  double m, n, o;
  double p[5];

  l = get_global_id(2) + 1;
  k = get_global_id(1) + 1;
  j = get_global_id(0);
  if (l > (i - 2) || k > (h - 2) || j >= g)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])d;

  int u = (l - 1) * (h - 2) + (k - 1);
  int v = u * (12 + 1) * 5 * 5;
  __global double(*w)[5][5] = (__global double(*)[5][5]) & e[v];
  __global double(*x)[5][5] = (__global double(*)[5][5]) & f[v];

  m = r[l][k][j];
  n = m * m;
  o = m * n;
  p[0] = t[l][k][j][0];
  p[1] = t[l][k][j][1];
  p[2] = t[l][k][j][2];
  p[3] = t[l][k][j][3];
  p[4] = t[l][k][j][4];

  w[j][0][0] = 0.0;
  w[j][1][0] = 1.0;
  w[j][2][0] = 0.0;
  w[j][3][0] = 0.0;
  w[j][4][0] = 0.0;

  w[j][0][1] = -(p[1] * n * p[1]) + 0.4 * q[l][k][j];
  w[j][1][1] = (2.0 - 0.4) * (p[1] / p[0]);
  w[j][2][1] = -0.4 * (p[2] * m);
  w[j][3][1] = -0.4 * (p[3] * m);
  w[j][4][1] = 0.4;

  w[j][0][2] = -(p[1] * p[2]) * n;
  w[j][1][2] = p[2] * m;
  w[j][2][2] = p[1] * m;
  w[j][3][2] = 0.0;
  w[j][4][2] = 0.0;

  w[j][0][3] = -(p[1] * p[3]) * n;
  w[j][1][3] = p[3] * m;
  w[j][2][3] = 0.0;
  w[j][3][3] = p[1] * m;
  w[j][4][3] = 0.0;

  w[j][0][4] = (0.4 * 2.0 * s[l][k][j] - 1.4 * p[4]) * (p[1] * n);
  w[j][1][4] = 1.4 * p[4] * m - 0.4 * (p[1] * p[1] * n + q[l][k][j]);
  w[j][2][4] = -0.4 * (p[2] * p[1]) * n;
  w[j][3][4] = -0.4 * (p[3] * p[1]) * n;
  w[j][4][4] = 1.4 * (p[1] * m);

  x[j][0][0] = 0.0;
  x[j][1][0] = 0.0;
  x[j][2][0] = 0.0;
  x[j][3][0] = 0.0;
  x[j][4][0] = 0.0;

  x[j][0][1] = -(4.0 / 3.0) * (0.1 * 1.0) * n * p[1];
  x[j][1][1] = (4.0 / 3.0) * (0.1 * 1.0) * m;
  x[j][2][1] = 0.0;
  x[j][3][1] = 0.0;
  x[j][4][1] = 0.0;

  x[j][0][2] = -(0.1 * 1.0) * n * p[2];
  x[j][1][2] = 0.0;
  x[j][2][2] = (0.1 * 1.0) * m;
  x[j][3][2] = 0.0;
  x[j][4][2] = 0.0;

  x[j][0][3] = -(0.1 * 1.0) * n * p[3];
  x[j][1][3] = 0.0;
  x[j][2][3] = 0.0;
  x[j][3][3] = (0.1 * 1.0) * m;
  x[j][4][3] = 0.0;

  x[j][0][4] = -((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[1] * p[1]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[2] * p[2]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[3] * p[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * n * p[4];

  x[j][1][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[1];
  x[j][2][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[2];
  x[j][3][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[3];
  x[j][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * m;
}
